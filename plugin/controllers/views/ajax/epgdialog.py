#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from urllib import quote
from Plugins.Extensions.OpenWebif.local import tstrings

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1447321436.584527
__CHEETAH_genTimestamp__ = 'Thu Nov 12 18:43:56 2015'
__CHEETAH_src__ = '/home/knuth/openpli-oe-core/build/tmp/work/fusionhd-oe-linux/enigma2-plugin-extensions-openwebif/1+gitAUTOINC+5837c87afc-r0/git/plugin/controllers/views/ajax/epgdialog.tmpl'
__CHEETAH_srcLastModified__ = 'Thu Nov 12 18:43:41 2015'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class epgdialog(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(epgdialog, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        if len(VFFSL(SL,"events",True)) == 0: # generated from line 3, col 1
            write(u'''<img src="images/not_found.jpg" title="No items found" border="0">
''')
        else: # generated from line 5, col 1
            write(u'''<style>
table { font-size:12px; font-family: Verdana,Arial,sans-serif;}
tr {background-color: #F0F7FC;}

.ti_icon {
height:25px;
width:25px;
background-image:url(\'images/timer_icons.png\');
display:inline-block;
}
.ti_empty {background-position:0px 0px;}
.ti_timer {background-position:-25px 0px;}
.ti_timerplay {background-position:-50px 0px;}
.ti_timeredit {background-position:-75px 0px;}
.ti_timerdelete {background-position:-100px 0px;}
.ti_timerat {background-position:-125px 0px;}
.d_timer{display:none;}
</style>
<div style="background-color: #1C478E;">
''')
            for event in VFFSL(SL,"events",True): # generated from line 25, col 1
                write(u'''\t\t<table style="font-size:12px;" width="100%" border="0" cellspacing="1" cellpadding="5">
\t\t\t<tr>
\t\t\t\t<td style="padding:0px" width="102px"><img width="100px" height="60px" src="''')
                _v = VFFSL(SL,"event.picon",True) # u'$event.picon' on line 28, col 81
                if _v is not None: write(_filter(_v, rawExpr=u'$event.picon')) # from line 28, col 81.
                write(u'''" title="" border="0"></td>
\t\t\t\t<td style="font-size:13px;color: #061C37;font-weight: bold;" width="30%">''')
                _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 29, col 78
                if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 29, col 78.
                write(u'''<br />''')
                _v = VFFSL(SL,"event.date",True) # u'$event.date' on line 29, col 96
                if _v is not None: write(_filter(_v, rawExpr=u'$event.date')) # from line 29, col 96.
                write(u'''</td>
\t\t\t\t<td>''')
                _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 30, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 30, col 9.
                write(u'''
\t\t\t\t<br/>''')
                _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 31, col 10
                if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 31, col 10.
                write(u'''&nbsp;-&nbsp;''')
                _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 31, col 35
                if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 31, col 35.
                write(u'''&nbsp;(''')
                _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 31, col 52
                if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 31, col 52.
                write(u''' min.)</td>
\t\t\t</tr>
\t\t\t<tr>
''')
                sref = quote(VFFSL(SL,"event.sref",True), safe=' ~@#$&()*!+=:;,.?/\'')
                write(u'''\t\t\t\t<td rowspan="3" style="text-align:center" id="''')
                _v = VFFSL(SL,"sref",True) # u'$sref' on line 35, col 51
                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 35, col 51.
                write(u''';''')
                _v = VFFSL(SL,"event.begin_timestamp",True) # u'$event.begin_timestamp' on line 35, col 57
                if _v is not None: write(_filter(_v, rawExpr=u'$event.begin_timestamp')) # from line 35, col 57.
                write(u''';''')
                _v = VFFSL(SL,"event.duration",True) # u'$event.duration' on line 35, col 80
                if _v is not None: write(_filter(_v, rawExpr=u'$event.duration')) # from line 35, col 80.
                write(u'''">
\t\t\t\t\t<a href="#" onclick="addTimerEvent(\'''')
                _v = VFFSL(SL,"sref",True) # u'$sref' on line 36, col 42
                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 36, col 42.
                write(u"""',""")
                _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 36, col 49
                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 36, col 49.
                write(u''');return false;" title="''')
                _v = VFFSL(SL,"tstrings",True)['add_timer'] # u"$tstrings['add_timer']" on line 36, col 82
                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_timer']")) # from line 36, col 82.
                write(u'''"><div class="ti_icon ti_timer"></div></a>
\t\t\t\t\t<a href="#" onclick="addTimerEventPlay(\'''')
                _v = VFFSL(SL,"sref",True) # u'$sref' on line 37, col 46
                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 37, col 46.
                write(u"""',""")
                _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 37, col 53
                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 37, col 53.
                write(u''');return false;" title="''')
                _v = VFFSL(SL,"tstrings",True)['add_zaptimer'] # u"$tstrings['add_zaptimer']" on line 37, col 86
                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_zaptimer']")) # from line 37, col 86.
                write(u'''"><div class="ti_icon ti_timerplay"></div></a>
\t\t\t\t\t<a href="#" onclick="addEditTimerEvent(\'''')
                _v = VFFSL(SL,"sref",True) # u'$sref' on line 38, col 46
                if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 38, col 46.
                write(u"""',""")
                _v = VFFSL(SL,"event.id",True) # u'$event.id' on line 38, col 53
                if _v is not None: write(_filter(_v, rawExpr=u'$event.id')) # from line 38, col 53.
                write(u''');return false;" title="''')
                _v = VFFSL(SL,"tstrings",True)['edit_timer'] # u"$tstrings['edit_timer']" on line 38, col 86
                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['edit_timer']")) # from line 38, col 86.
                write(u'''"><div class="ti_icon ti_timeredit"></div></a>
\t\t\t\t\t<br>
''')
                if VFFSL(SL,"at",True): # generated from line 40, col 6
                    write(u'''\t\t\t\t\t<a class="at_timer" href="#" onclick="addAutoTimerEvent(\'''')
                    _v = VFFSL(SL,"sref",True) # u'$sref' on line 41, col 63
                    if _v is not None: write(_filter(_v, rawExpr=u'$sref')) # from line 41, col 63.
                    write(u"""','""")
                    _v = VFFSL(SL,"event.sname",True) # u'$event.sname' on line 41, col 71
                    if _v is not None: write(_filter(_v, rawExpr=u'$event.sname')) # from line 41, col 71.
                    write(u"""','""")
                    _v = VFFSL(SL,"event.title",True) # u'$event.title' on line 41, col 86
                    if _v is not None: write(_filter(_v, rawExpr=u'$event.title')) # from line 41, col 86.
                    write(u"""','""")
                    _v = VFFSL(SL,"event.begin",True) # u'$event.begin' on line 41, col 101
                    if _v is not None: write(_filter(_v, rawExpr=u'$event.begin')) # from line 41, col 101.
                    write(u"""','""")
                    _v = VFFSL(SL,"event.end",True) # u'$event.end' on line 41, col 116
                    if _v is not None: write(_filter(_v, rawExpr=u'$event.end')) # from line 41, col 116.
                    write(u'''\');return false;" title="''')
                    _v = VFFSL(SL,"tstrings",True)['add_autotimer'] # u"$tstrings['add_autotimer']" on line 41, col 151
                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['add_autotimer']")) # from line 41, col 151.
                    write(u'''"><div class="ti_icon ti_timerat"></div></a>
''')
                write(u'''\t\t\t\t\t<a class="d_timer" href="#" onclick="delTimerEvent(this);return false;" title="''')
                _v = VFFSL(SL,"tstrings",True)['delete_timer'] # u"$tstrings['delete_timer']" on line 43, col 85
                if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['delete_timer']")) # from line 43, col 85.
                write(u'''"><div class="ti_icon ti_timerdelete"></div></a>
\t\t\t\t\t<br>
''')
                if VFFSL(SL,"kinopoisk",True): # generated from line 45, col 6
                    write(u'''\t\t\t\t\t<a target="_blank" href="http://www.kinopoisk.ru/index.php?first=no&kp_query=''')
                    _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 46, col 83
                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 46, col 83.
                    write(u'''"><img src="/images/kinopoisk.png" width="25" height="25" title="''')
                    _v = VFFSL(SL,"tstrings",True)['search_kinopoisk'] # u"$tstrings['search_kinopoisk']" on line 46, col 168
                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_kinopoisk']")) # from line 46, col 168.
                    write(u'''" border="0"></a>
''')
                else: # generated from line 47, col 6
                    write(u'''\t\t\t\t\t<a target="_blank" href="http://www.imdb.com/find?s=all&amp;q=''')
                    _v = VFFSL(SL,"quote",False)(VFFSL(SL,"event.title",True)) # u'$quote($event.title)' on line 48, col 68
                    if _v is not None: write(_filter(_v, rawExpr=u'$quote($event.title)')) # from line 48, col 68.
                    write(u'''"><img src="/images/imdb.png" width="25" height="25" title="''')
                    _v = VFFSL(SL,"tstrings",True)['search_imdb'] # u"$tstrings['search_imdb']" on line 48, col 148
                    if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['search_imdb']")) # from line 48, col 148.
                    write(u'''" border="0"></a>
''')
                write(u'''\t\t\t\t</td>
\t\t\t\t<td colspan="2">''')
                _v = VFFSL(SL,"event.shortdesc",True) # u'$event.shortdesc' on line 51, col 21
                if _v is not None: write(_filter(_v, rawExpr=u'$event.shortdesc')) # from line 51, col 21.
                write(u'''</td>
\t\t\t</tr>
\t\t\t<tr>
\t\t\t\t<td colspan="2" rowspan="2">''')
                _v = VFFSL(SL,"event.longdesc",True) # u'$event.longdesc' on line 54, col 33
                if _v is not None: write(_filter(_v, rawExpr=u'$event.longdesc')) # from line 54, col 33.
                write(u'''</td>
\t\t\t</tr>
\t\t</table>
''')
            write(u'''</div>
<script type="text/javascript">
var reloadTimers = true;
$(function() {
\t$(\'#editTimerForm\').load(\'ajax/edittimer\');
});
</script>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_epgdialog= 'respond'

## END CLASS DEFINITION

if not hasattr(epgdialog, '_initCheetahAttributes'):
    templateAPIClass = getattr(epgdialog, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(epgdialog)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=epgdialog()).run()


