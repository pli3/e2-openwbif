#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from Plugins.Extensions.OpenWebif.local import tstrings

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1447321436.406567
__CHEETAH_genTimestamp__ = 'Thu Nov 12 18:43:56 2015'
__CHEETAH_src__ = '/home/knuth/openpli-oe-core/build/tmp/work/fusionhd-oe-linux/enigma2-plugin-extensions-openwebif/1+gitAUTOINC+5837c87afc-r0/git/plugin/controllers/views/ajax/bqe.tmpl'
__CHEETAH_srcLastModified__ = 'Thu Nov 12 18:43:41 2015'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class bqe(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(bqe, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        _orig_filter_26655563 = _filter
        filterName = u'WebSafe'
        if self._CHEETAH__filters.has_key("WebSafe"):
            _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
        else:
            _filter = self._CHEETAH__currentFilter = \
			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
        write(u'''
<style>
\t.select { width: 100%; }
\t.sortable { list-style-type: none; margin: 0; padding: 0; width: 200px; }
\t.sortable li { margin: 0 1px 1px 2px; padding-left: 1.5em; font-size: .8em;  height:20px;}
\t.sortable li span { margin: 0 0 0 -1.5em; display: inline-block; }

\t #bql li .handle { display: inline-block;width: 2em;}
\t #bqs li .handle { display: inline-block;width: 2em;}

\t.selectable .ui-selecting { background: #FECA40; }
\t.selectable .ui-selected { background: #F39814; color: white; }
\t.selectable { list-style-type: none; margin: 0; padding: 0; width: 100%; }
\t.selectable li { margin: 1px; padding: 0.1em; font-size: 1em; height: 20px; }
</style>
<div id="content_main" style="min-height: 500px;">
<div id="info">
<h3>''')
        _v = VFFSL(SL,"tstrings",True)['Bouquet_Editor'] # u"$tstrings['Bouquet_Editor']" on line 20, col 5
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['Bouquet_Editor']")) # from line 20, col 5.
        write(u'''</h3>
<div style="background-color: #EEE">
<div style="display: inline-block; width: 100%; zoom: 1;">

<div style="width:50%; height:50%; float:left">
<div style="padding:5px;">

<div id="toolbar-header">
<span id="toolbar"><span id="tb1">
<input type="radio" id="btn0" name="tb1" checked="checked" /><label for="btn0">''')
        _v = VFFSL(SL,"tstrings",True)['tv'] # u"$tstrings['tv']" on line 29, col 80
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tv']")) # from line 29, col 80.
        write(u'''</label>
<input type="radio" id="btn1" name="tb1"/><label for="btn1">''')
        _v = VFFSL(SL,"tstrings",True)['radio'] # u"$tstrings['radio']" on line 30, col 61
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['radio']")) # from line 30, col 61.
        write(u'''</label>
</span></span>
</div>

<div id="toolbar-header">
<span id="toolbar"><span id="tb2">
<input type="radio" id="btn2" name="tb2" /><label for="btn2">''')
        _v = VFFSL(SL,"tstrings",True)['satellites'] # u"$tstrings['satellites']" on line 36, col 62
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['satellites']")) # from line 36, col 62.
        write(u'''</label>
<input type="radio" id="btn3" name="tb2" checked="checked" /><label for="btn3">''')
        _v = VFFSL(SL,"tstrings",True)['providers'] # u"$tstrings['providers']" on line 37, col 80
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['providers']")) # from line 37, col 80.
        write(u'''</label>
<input type="radio" id="btn4" name="tb2" /><label for="btn4">''')
        _v = VFFSL(SL,"tstrings",True)['all_channels'] # u"$tstrings['all_channels']" on line 38, col 62
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['all_channels']")) # from line 38, col 62.
        write(u'''</label>
</span></span>
</div>
\t<div id="sel0" style="height: 200px;overflow-y:scroll;">
\t<ol id="provider" class="selectable" >
\t</ol>
\t</div>
\t<div style="margin:5px 0 5px 0;">
\t\t<button id=\'btnaddp\' onclick="addprovider(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_add_provider_as_bouquet'] # u"$tstrings['bqe_add_provider_as_bouquet']" on line 46, col 63
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_provider_as_bouquet']")) # from line 46, col 63.
        write(u'''</button>
\t</div>
\t<div>
\t<div style="margin:5px 0 5px 0;">
\t''')
        _v = VFFSL(SL,"tstrings",True)['bqe_search'] # u"$tstrings['bqe_search']" on line 50, col 2
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_search']")) # from line 50, col 2.
        write(u''' :<input id="searchch" value="...">
\t</div>
\t</div>

\t<div id="sel1" style="height: 300px;overflow-y:scroll;">
\t<ol id="channels" class="selectable" >
\t</ol>
\t</div>
\t
\t<div style="margin:5px 0 5px 0;">
\t\t<button id=\'btnaddc\' onclick="addchannel(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_add_channel'] # u"$tstrings['bqe_add_channel']" on line 60, col 62
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_channel']")) # from line 60, col 62.
        write(u'''</button>
\t\t<button id=\'btnadda\' onclick="addalter(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_add_alternative'] # u"$tstrings['bqe_add_alternative']" on line 61, col 60
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_alternative']")) # from line 61, col 60.
        write(u'''</button>
\t</div>

</div></div>

<div style="width:50%; height:50%; float:right">
<div style="padding:5px;">
<div id="toolbar-header">
<span id="toolbar"><span id="tb3">
<button id="btn5">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_reload'] # u"$tstrings['bqe_reload']" on line 70, col 19
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_reload']")) # from line 70, col 19.
        write(u'''</button>
<button id="btn6">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_export'] # u"$tstrings['bqe_export']" on line 71, col 19
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_export']")) # from line 71, col 19.
        write(u'''</button>
<button id="btn7">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_import'] # u"$tstrings['bqe_import']" on line 72, col 19
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_import']")) # from line 72, col 19.
        write(u'''</button>
</span></span>
</div>
\t<div style="padding:5px;">
\t<div id="sel2" style="height: 280px;overflow-y:scroll;">
\t<ol id="bql" class="selectable" >
\t</ol>
\t</div>
\t<div style="margin:5px 0 5px 0;">
\t\t<button id=\'btnbadd\' onclick="addbq(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_add_bq'] # u"$tstrings['bqe_add_bq']" on line 81, col 57
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_bq']")) # from line 81, col 57.
        write(u'''</button>
\t\t<button id=\'btnbren\' onclick="renbq(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_rename_bq'] # u"$tstrings['bqe_rename_bq']" on line 82, col 57
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_rename_bq']")) # from line 82, col 57.
        write(u'''</button>
\t\t<button id=\'btnbdel\' onclick="delbq(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_delete_bq'] # u"$tstrings['bqe_delete_bq']" on line 83, col 57
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_delete_bq']")) # from line 83, col 57.
        write(u'''</button>
\t</div>
\t
\t<div id="sel3" style="height: 300px;overflow-y:scroll;">
\t<ol id="bqs" class="selectable" >
\t</ol>
\t</div>
\t<div style="margin:5px 0 5px 0;">
\t\t<button id=\'btncdel\' onclick="delc(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_delete_channel'] # u"$tstrings['bqe_delete_channel']" on line 91, col 56
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_delete_channel']")) # from line 91, col 56.
        write(u'''</button>
\t\t<button id=\'btnmadd\' onclick="addm(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_add_marker'] # u"$tstrings['bqe_add_marker']" on line 92, col 56
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_add_marker']")) # from line 92, col 56.
        write(u'''</button>
\t\t<button id=\'btnmgren\' onclick="renmg(); return false;">''')
        _v = VFFSL(SL,"tstrings",True)['bqe_rename'] # u"$tstrings['bqe_rename']" on line 93, col 58
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['bqe_rename']")) # from line 93, col 58.
        write(u'''</button>
\t</div>
\t
\t</div>
</div>

</div>
</div>
<div id="errorbox" class="timerlist_row" style="color: red;">
\t<div class="ui-state-error ui-corner-all" style="padding: 0 .7em;"> 
\t<p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span> 
\t\t<span id="error"></span>
\t\t<span id="success" style="color: green;"></span>
\t</div>
</div>

</div></div></div>
<form id="uploadrestore" style="display:none" action"uploadrestore" method="post" enctype="multipart/form-data" encoding="multipart/form-data" >
<input type="file" name="rfile" id="rfile">
</form>
<script type="text/javascript" src="js/bqe.js"></script>
<script type="text/javascript">
$(function() { InitPage();});
</script>
''')
        _filter = self._CHEETAH__currentFilter = _orig_filter_26655563
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_bqe= 'respond'

## END CLASS DEFINITION

if not hasattr(bqe, '_initCheetahAttributes'):
    templateAPIClass = getattr(bqe, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(bqe)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=bqe()).run()


