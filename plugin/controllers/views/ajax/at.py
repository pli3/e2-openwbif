#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from Plugins.Extensions.OpenWebif.local import tstrings

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1447321436.568487
__CHEETAH_genTimestamp__ = 'Thu Nov 12 18:43:56 2015'
__CHEETAH_src__ = '/home/knuth/openpli-oe-core/build/tmp/work/fusionhd-oe-linux/enigma2-plugin-extensions-openwebif/1+gitAUTOINC+5837c87afc-r0/git/plugin/controllers/views/ajax/at.tmpl'
__CHEETAH_srcLastModified__ = 'Thu Nov 12 18:43:41 2015'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class at(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(at, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        _orig_filter_77311076 = _filter
        filterName = u'WebSafe'
        if self._CHEETAH__filters.has_key("WebSafe"):
            _filter = self._CHEETAH__currentFilter = self._CHEETAH__filters[filterName]
        else:
            _filter = self._CHEETAH__currentFilter = \
			self._CHEETAH__filters[filterName] = getattr(self._CHEETAH__filtersLib, filterName)(self).filter
        write(u'''<style>
  #atlist .ui-selecting { background: #FECA40; }
  #atlist .ui-selected { background: #F39814; color: white; }
  #atlist { list-style-type: none; margin: 0; padding: 0; }
  #atlist li { margin: 3px; padding: 0.4em; font-size: 1.1em; height: 16px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;}
  optgroup {font-weight: bolder;}
fieldset > label
{
\t-webkit-margin-top-collapse: separate;
\tmargin-top: 1.5em;
\tdisplay: inline-block;
}
</style>

<div id="content_main" style="min-height: 500px;">
\t<div id="info">
\t\t<div style="background-color: #00000">
\t\t<div style="display: inline-block; width: 100%; zoom: 1;">
\t\t\t<div style="float:left;width:200px;">
\t\t\t\t<h3>''')
        _v = VFFSL(SL,"tstrings",True)['at_list'] # u"$tstrings['at_list']" on line 22, col 9
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_list']")) # from line 22, col 9.
        write(u'''</h3>
\t\t\t\t<ol id="atlist">
\t\t\t\t</ol>
\t\t\t\t
\t\t\t</div>
\t\t\t<div style="margin-left:200px;">
\t\t\t\t<div style="display: inline-block; width: 100%; zoom: 1;">
\t\t\t\t\t<h3>''')
        _v = VFFSL(SL,"tstrings",True)['at_at_edit'] # u"$tstrings['at_at_edit']" on line 29, col 10
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_at_edit']")) # from line 29, col 10.
        write(u''' <span id=\'at_name\'></span></h3>
\t\t\t\t\t<div id="ateditcontent">
\t\t\t\t\t\t<form>
\t\t\t\t\t\t\t<fieldset>
\t\t\t\t\t\t\t\t<br><label for="enabled">''')
        _v = VFFSL(SL,"tstrings",True)['at_enabled'] # u"$tstrings['at_enabled']" on line 33, col 34
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_enabled']")) # from line 33, col 34.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="enabled" id="enabled" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t<br><label for="name">''')
        _v = VFFSL(SL,"tstrings",True)['at_description'] # u"$tstrings['at_description']" on line 35, col 31
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_description']")) # from line 35, col 31.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="text" name="name" id="name" class="text ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t<br><label for="match">''')
        _v = VFFSL(SL,"tstrings",True)['at_title_match'] # u"$tstrings['at_title_match']" on line 37, col 32
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_title_match']")) # from line 37, col 32.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="text" name="match" id="match" class="text ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t<!-- <label for="searchType">''')
        _v = VFFSL(SL,"tstrings",True)['at_search_type'] # u"$tstrings['at_search_type']" on line 39, col 38
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_search_type']")) # from line 39, col 38.
        write(u''':</label> -->
\t\t\t\t\t\t\t\t<select name="searchType" id="searchType">
\t\t\t\t\t\t\t\t<option value="partial" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['at_partial_match'] # u"$tstrings['at_partial_match']" on line 41, col 53
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_partial_match']")) # from line 41, col 53.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="exact">''')
        _v = VFFSL(SL,"tstrings",True)['at_exact_match'] # u"$tstrings['at_exact_match']" on line 42, col 31
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_exact_match']")) # from line 42, col 31.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="description">''')
        _v = VFFSL(SL,"tstrings",True)['at_description_match'] # u"$tstrings['at_description_match']" on line 43, col 37
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_description_match']")) # from line 43, col 37.
        write(u'''</option>
''')
        if VFN(VFFSL(SL,"types",True),"has_key",False)('start'): # generated from line 44, col 9
            write(u'''\t\t\t\t\t\t\t\t\t<option value="start">''')
            _v = VFFSL(SL,"tstrings",True)['at_start_match'] # u"$tstrings['at_start_match']" on line 45, col 32
            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_start_match']")) # from line 45, col 32.
            write(u'''</option>
''')
        write(u'''\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t<!-- <br><label for="searchCase">''')
        _v = VFFSL(SL,"tstrings",True)['at_search_strictness'] # u"$tstrings['at_search_strictness']" on line 48, col 42
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_search_strictness']")) # from line 48, col 42.
        write(u''':</label> -->
\t\t\t\t\t\t\t\t<select name="searchCase" id="searchCase">
\t\t\t\t\t\t\t\t<option value="sensitive" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['at_case_sensitive'] # u"$tstrings['at_case_sensitive']" on line 50, col 55
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_case_sensitive']")) # from line 50, col 55.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="insensitive">''')
        _v = VFFSL(SL,"tstrings",True)['at_case_insensitive'] # u"$tstrings['at_case_insensitive']" on line 51, col 37
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_case_insensitive']")) # from line 51, col 37.
        write(u'''</option>
\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t<br><label for="justplay">''')
        _v = VFFSL(SL,"tstrings",True)['at_timer_type'] # u"$tstrings['at_timer_type']" on line 53, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_type']")) # from line 53, col 35.
        write(u''':</label>
\t\t\t\t\t\t\t\t<select name="justplay" id="justplay">
\t\t\t\t\t\t\t\t<option value="0" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['at_record'] # u"$tstrings['at_record']" on line 55, col 47
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_record']")) # from line 55, col 47.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="1">''')
        _v = VFFSL(SL,"tstrings",True)['at_zap'] # u"$tstrings['at_zap']" on line 56, col 27
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_zap']")) # from line 56, col 27.
        write(u'''</option>
\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t<label for="overrideAlternatives">''')
        _v = VFFSL(SL,"tstrings",True)['at_override_alt'] # u"$tstrings['at_override_alt']" on line 58, col 43
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_override_alt']")) # from line 58, col 43.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="overrideAlternatives" id="overrideAlternatives" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t<br><label for="timeSpan">''')
        _v = VFFSL(SL,"tstrings",True)['at_timespan'] # u"$tstrings['at_timespan']" on line 60, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan']")) # from line 60, col 35.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="timeSpan" id="timeSpan" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="timeSpanE">
\t\t\t\t\t\t\t\t\t<label for="from">''')
        _v = VFFSL(SL,"tstrings",True)['at_timespan_begin'] # u"$tstrings['at_timespan_begin']" on line 63, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan_begin']")) # from line 63, col 28.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<input type="text" name="from" id="from" value="" class="text ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<label for="to">''')
        _v = VFFSL(SL,"tstrings",True)['at_timespan_end'] # u"$tstrings['at_timespan_end']" on line 65, col 26
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timespan_end']")) # from line 65, col 26.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<input type="text" name="to" id="to" value="" class="text ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t<br><label for="timeFrame">''')
        _v = VFFSL(SL,"tstrings",True)['at_datespan'] # u"$tstrings['at_datespan']" on line 68, col 36
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan']")) # from line 68, col 36.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="timeFrame" id="timeFrame" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="timeFrameE">
\t\t\t\t\t\t\t\t\t<label for="after">''')
        _v = VFFSL(SL,"tstrings",True)['at_datespan_before'] # u"$tstrings['at_datespan_before']" on line 71, col 29
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan_before']")) # from line 71, col 29.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<input type="text" name="after" id="after" value="" class="text date ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<input type="checkbox" name="timeFrameAfter" id="timeFrameAfter" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<label for="before">''')
        _v = VFFSL(SL,"tstrings",True)['at_datespan_after'] # u"$tstrings['at_datespan_after']" on line 74, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_datespan_after']")) # from line 74, col 30.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<span id="beforeE"><input type="text" name="before" id="before" value="" class="text date ui-widget-content ui-corner-all"></span>
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t<br><label for="timerOffset">''')
        _v = VFFSL(SL,"tstrings",True)['at_timer_offset'] # u"$tstrings['at_timer_offset']" on line 77, col 38
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset']")) # from line 77, col 38.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="timerOffset" id="timerOffset" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="timerOffsetE">
\t\t\t\t\t\t\t\t\t<label for="obefore">''')
        _v = VFFSL(SL,"tstrings",True)['at_timer_offset_before'] # u"$tstrings['at_timer_offset_before']" on line 80, col 31
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset_before']")) # from line 80, col 31.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<select name="obefore" id="obefore">
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t<label for="oafter">''')
        _v = VFFSL(SL,"tstrings",True)['at_timer_offset_after'] # u"$tstrings['at_timer_offset_after']" on line 83, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timer_offset_after']")) # from line 83, col 30.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<select name="oafter" id="oafter">
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t<br><label for="maxDuration">''')
        _v = VFFSL(SL,"tstrings",True)['at_max_duration'] # u"$tstrings['at_max_duration']" on line 88, col 38
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_max_duration']")) # from line 88, col 38.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="maxDuration" id="maxDuration" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="maxDurationE">
\t\t\t\t\t\t\t\t\t<label for="maxduration"></label>
\t\t\t\t\t\t\t\t\t<select name="maxduration" id="maxduration">
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t<br><label for="afterevent">''')
        _v = VFFSL(SL,"tstrings",True)['at_after_event'] # u"$tstrings['at_after_event']" on line 96, col 37
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event']")) # from line 96, col 37.
        write(u''':</label>
\t\t\t\t\t\t\t\t<select name="afterevent" id="afterevent">
\t\t\t\t\t\t\t\t<option value="" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['at_after_event_standard'] # u"$tstrings['at_after_event_standard']" on line 98, col 46
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_standard']")) # from line 98, col 46.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="none">''')
        _v = VFFSL(SL,"tstrings",True)['at_after_event_nothing'] # u"$tstrings['at_after_event_nothing']" on line 99, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_nothing']")) # from line 99, col 30.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="standby">''')
        _v = VFFSL(SL,"tstrings",True)['at_after_event_standby'] # u"$tstrings['at_after_event_standby']" on line 100, col 33
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_standby']")) # from line 100, col 33.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="shutdown">''')
        _v = VFFSL(SL,"tstrings",True)['at_after_event_deepstandby'] # u"$tstrings['at_after_event_deepstandby']" on line 101, col 34
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_deepstandby']")) # from line 101, col 34.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="auto">''')
        _v = VFFSL(SL,"tstrings",True)['at_after_event_auto'] # u"$tstrings['at_after_event_auto']" on line 102, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_after_event_auto']")) # from line 102, col 30.
        write(u'''</option>
\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t<br><br><span id="AftereventE">
\t\t\t\t\t\t\t\t<label for="timeSpanAE">''')
        _v = VFFSL(SL,"tstrings",True)['at_event_timespan'] # u"$tstrings['at_event_timespan']" on line 105, col 33
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan']")) # from line 105, col 33.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="timeSpanAE" id="timeSpanAE" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="timeSpanAEE">
\t\t\t\t\t\t\t\t\t<br><br><label for="from">''')
        _v = VFFSL(SL,"tstrings",True)['at_event_timespan_begin'] # u"$tstrings['at_event_timespan_begin']" on line 108, col 36
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan_begin']")) # from line 108, col 36.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<input type="text" name="aefrom" id="aefrom" value="" class="text ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<br><br><label for="to">''')
        _v = VFFSL(SL,"tstrings",True)['at_event_timespan_end'] # u"$tstrings['at_event_timespan_end']" on line 110, col 34
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_event_timespan_end']")) # from line 110, col 34.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<input type="text" name="aeto" id="aeto" value="" class="text ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t<br><label for="counter">''')
        _v = VFFSL(SL,"tstrings",True)['at_max_counter'] # u"$tstrings['at_max_counter']" on line 115, col 34
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_max_counter']")) # from line 115, col 34.
        write(u''':</label>
\t\t\t\t\t\t\t\t<select name="counter" id="counter">
\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t<span id="CounterE">
\t\t\t\t\t\t\t\t<label for="left">''')
        _v = VFFSL(SL,"tstrings",True)['at_left'] # u"$tstrings['at_left']" on line 119, col 27
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_left']")) # from line 119, col 27.
        write(u''':</label>
\t\t\t\t\t\t\t\t<select name="left" id="left">
\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t<label for="counterFormat">''')
        _v = VFFSL(SL,"tstrings",True)['at_reset_count'] # u"$tstrings['at_reset_count']" on line 122, col 36
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reset_count']")) # from line 122, col 36.
        write(u''':</label>
\t\t\t\t\t\t\t\t<select id="counterFormat" name="counterFormat" size="1">
\t\t\t\t\t\t\t\t<option value="" selected>''')
        _v = VFFSL(SL,"tstrings",True)['at_never'] # u"$tstrings['at_never']" on line 124, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_never']")) # from line 124, col 35.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="%m">''')
        _v = VFFSL(SL,"tstrings",True)['at_monthly'] # u"$tstrings['at_monthly']" on line 125, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_monthly']")) # from line 125, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="%U">''')
        _v = VFFSL(SL,"tstrings",True)['at_weekly_sun'] # u"$tstrings['at_weekly_sun']" on line 126, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_weekly_sun']")) # from line 126, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="%W">''')
        _v = VFFSL(SL,"tstrings",True)['at_weekly_mon'] # u"$tstrings['at_weekly_mon']" on line 127, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_weekly_mon']")) # from line 127, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t<br><label for="avoidDuplicateDescription">''')
        _v = VFFSL(SL,"tstrings",True)['at_avoid_dup'] # u"$tstrings['at_avoid_dup']" on line 131, col 52
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup']")) # from line 131, col 52.
        write(u''':</label>
\t\t\t\t\t\t\t\t<select name="avoidDuplicateDescription" id="avoidDuplicateDescription">
\t\t\t\t\t\t\t\t<option value="0" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_no'] # u"$tstrings['at_avoid_dup_no']" on line 133, col 47
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_no']")) # from line 133, col 47.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="1">''')
        _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_same_service'] # u"$tstrings['at_avoid_dup_same_service']" on line 134, col 27
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_same_service']")) # from line 134, col 27.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="2">''')
        _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_any_service'] # u"$tstrings['at_avoid_dup_any_service']" on line 135, col 27
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_any_service']")) # from line 135, col 27.
        write(u'''</option>
\t\t\t\t\t\t\t\t<option value="3">''')
        _v = VFFSL(SL,"tstrings",True)['at_avoid_dup_any_service_rec'] # u"$tstrings['at_avoid_dup_any_service_rec']" on line 136, col 27
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_avoid_dup_any_service_rec']")) # from line 136, col 27.
        write(u'''</option>
\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t<br><label for="Location">''')
        _v = VFFSL(SL,"tstrings",True)['at_location'] # u"$tstrings['at_location']" on line 138, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_location']")) # from line 138, col 35.
        write(u''':</label>
\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t<input type="checkbox" name="Location" id="Location" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="LocationE">
\t\t\t\t\t\t\t\t\t<label for="location"></label>
\t\t\t\t\t\t\t\t\t<select name="location" id="location">
''')
        for location in VFFSL(SL,"locations",True): # generated from line 144, col 11
            write(u'''\t\t\t\t\t\t\t\t\t\t\t<option value="''')
            _v = VFFSL(SL,"location",True) # u'$location' on line 145, col 27
            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 145, col 27.
            write(u'''">''')
            _v = VFFSL(SL,"location",True) # u'$location' on line 145, col 38
            if _v is not None: write(_filter(_v, rawExpr=u'$location')) # from line 145, col 38.
            write(u'''</option>
''')
        write(u'''\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t<br><label for="Tags">''')
        _v = VFFSL(SL,"tstrings",True)['at_tags'] # u"$tstrings['at_tags']" on line 150, col 31
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_tags']")) # from line 150, col 31.
        write(u''':</label>
\t\t\t\t\t\t\t\t\t<span id="TagsE">
\t\t\t\t\t\t\t\t\t<select data-placeholder="''')
        _v = VFFSL(SL,"tstrings",True)['at_select_tags'] # u"$tstrings['at_select_tags']" on line 152, col 36
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_select_tags']")) # from line 152, col 36.
        write(u'''" name="tags" id="tags" class="tags_select_box" multiple tabindex="16">
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t<br><label for="Bouquets">''')
        _v = VFFSL(SL,"tstrings",True)['at_bouquets'] # u"$tstrings['at_bouquets']" on line 155, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_bouquets']")) # from line 155, col 35.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="Bouquets" id="Bouquets" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="BouquetsE">
\t\t\t\t\t\t\t\t\t<select data-placeholder="''')
        _v = VFFSL(SL,"tstrings",True)['at_select_bouquets'] # u"$tstrings['at_select_bouquets']" on line 158, col 36
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_select_bouquets']")) # from line 158, col 36.
        write(u'''" name="bouquets" id="bouquets" class="bq_select_box" multiple tabindex="16">
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t<br><label for="Channels">''')
        _v = VFFSL(SL,"tstrings",True)['at_channels'] # u"$tstrings['at_channels']" on line 161, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_channels']")) # from line 161, col 35.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="Channels" id="Channels" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="ChannelsE">
\t\t\t\t\t\t\t\t\t<select data-placeholder="''')
        _v = VFFSL(SL,"tstrings",True)['at_select_channels'] # u"$tstrings['at_select_channels']" on line 164, col 36
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_select_channels']")) # from line 164, col 36.
        write(u'''" name="channels" id="channels" class="ch_select_box" multiple tabindex="16">
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t<br>
\t\t\t\t\t\t\t\t<br>
\t\t\t\t\t\t\t\t<div>
\t\t\t\t\t\t\t\t<label for="Filter">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter'] # u"$tstrings['at_filter']" on line 170, col 29
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter']")) # from line 170, col 29.
        write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="Filter" id="Filter" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t\t<span id="FilterE" style="display:inline-table">
\t\t\t\t\t\t\t\t\t<input type="button" id="AddFilter" value="''')
        _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 173, col 53
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 173, col 53.
        write(u'''"/>
\t\t\t\t\t\t\t\t\t<table id="filterlist">
\t\t\t\t\t\t\t\t\t<tr id="dummyfilter" style="display:none">
\t\t\t\t\t\t\t\t\t<td class="nopadding">
\t\t\t\t\t\t\t\t\t<select size="1" class="FT">
\t\t\t\t\t\t\t\t\t<option value="include" selected="">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter_include'] # u"$tstrings['at_filter_include']" on line 178, col 46
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_include']")) # from line 178, col 46.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="exclude">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter_exclude'] # u"$tstrings['at_filter_exclude']" on line 179, col 34
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_exclude']")) # from line 179, col 34.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</td>
\t\t\t\t\t\t\t\t\t<td class="nopadding">
\t\t\t\t\t\t\t\t\t<select size="1" class="FM">
\t\t\t\t\t\t\t\t\t<option value="title" selected="">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter_title'] # u"$tstrings['at_filter_title']" on line 184, col 44
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_title']")) # from line 184, col 44.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="shortdescription">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter_short_desc'] # u"$tstrings['at_filter_short_desc']" on line 185, col 43
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_short_desc']")) # from line 185, col 43.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="description">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter_desc'] # u"$tstrings['at_filter_desc']" on line 186, col 38
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_desc']")) # from line 186, col 38.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="dayofweek">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter_day'] # u"$tstrings['at_filter_day']" on line 187, col 36
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_day']")) # from line 187, col 36.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</td>
\t\t\t\t\t\t\t\t\t<td class="nopadding">
\t\t\t\t\t\t\t\t\t<input type="text" class="FI" size="20" value="" style="display: block;">
\t\t\t\t\t\t\t\t\t<select size="1" class="FS" style="display: none;">
\t\t\t\t\t\t\t\t\t<option value="0" selected="">''')
        _v = VFFSL(SL,"tstrings",True)['monday'] # u"$tstrings['monday']" on line 193, col 40
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['monday']")) # from line 193, col 40.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="1">''')
        _v = VFFSL(SL,"tstrings",True)['tuesday'] # u"$tstrings['tuesday']" on line 194, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuesday']")) # from line 194, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="2">''')
        _v = VFFSL(SL,"tstrings",True)['wednesday'] # u"$tstrings['wednesday']" on line 195, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['wednesday']")) # from line 195, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="3">''')
        _v = VFFSL(SL,"tstrings",True)['thursday'] # u"$tstrings['thursday']" on line 196, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['thursday']")) # from line 196, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="4">''')
        _v = VFFSL(SL,"tstrings",True)['friday'] # u"$tstrings['friday']" on line 197, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['friday']")) # from line 197, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="5">''')
        _v = VFFSL(SL,"tstrings",True)['saturday'] # u"$tstrings['saturday']" on line 198, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['saturday']")) # from line 198, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="6">''')
        _v = VFFSL(SL,"tstrings",True)['sunday'] # u"$tstrings['sunday']" on line 199, col 28
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['sunday']")) # from line 199, col 28.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="weekend">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter_weekend'] # u"$tstrings['at_filter_weekend']" on line 200, col 34
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_weekend']")) # from line 200, col 34.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t<option value="weekday">''')
        _v = VFFSL(SL,"tstrings",True)['at_filter_weekday'] # u"$tstrings['at_filter_weekday']" on line 201, col 34
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_filter_weekday']")) # from line 201, col 34.
        write(u'''</option>
\t\t\t\t\t\t\t\t\t</select>
\t\t\t\t\t\t\t\t\t</td>
\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="RemoveFilter" id="RemoveFilterID" value="" class="FR checkbox"> ''')
        _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 204, col 107
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 204, col 107.
        write(u'''</td>
\t\t\t\t\t\t\t\t\t</tr>
\t\t\t\t\t\t\t\t\t</table>
\t\t\t\t\t\t\t\t\t</span>
\t\t\t\t\t\t\t\t</div>
\t\t\t\t\t\t\t\t
''')
        if VFFSL(SL,"hasVPS",True) == 1: # generated from line 210, col 9
            write(u'''\t\t\t\t\t\t\t\t<br><label for="vps">''')
            _v = VFFSL(SL,"tstrings",True)['vps'] # u"$tstrings['vps']" on line 211, col 30
            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['vps']")) # from line 211, col 30.
            write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="vps" id="vps" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t<span id="vpsE">
\t\t\t\t\t\t\t\t<label for="vpssm">''')
            _v = VFFSL(SL,"tstrings",True)['safe_mode'] # u"$tstrings['safe_mode']" on line 214, col 28
            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['safe_mode']")) # from line 214, col 28.
            write(u''':</label>
\t\t\t\t\t\t\t\t\t<input type="checkbox" name="vpssm" id="vpssm" value="" class="checkbox ui-widget-content ui-corner-all">
\t\t\t\t\t\t\t\t</span>
''')
        if VFFSL(SL,"hasSeriesPlugin",True) == 1: # generated from line 218, col 9
            write(u'''\t\t\t\t\t\t\t\t<br><label for="seriesplugin">''')
            _v = VFFSL(SL,"tstrings",True)['at_label_series'] # u"$tstrings['at_label_series']" on line 219, col 39
            if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_label_series']")) # from line 219, col 39.
            write(u''':</label>
\t\t\t\t\t\t\t\t<input type="checkbox" name="series_labeling" id="series_labeling" value="" class="checkbox ui-widget-content ui-corner-all">
''')
        write(u'''\t\t\t\t\t\t\t</fieldset>
\t\t\t\t\t\t</form>
\t\t\t\t\t\t
\t\t\t\t\t\t<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
\t\t\t\t\t\t<div id="actions">
\t\t\t\t\t\t<button id="atbutton0">''')
        _v = VFFSL(SL,"tstrings",True)['at_add'] # u"$tstrings['at_add']" on line 227, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_add']")) # from line 227, col 30.
        write(u'''</button>
\t\t\t\t\t\t<button id="atbutton1">''')
        _v = VFFSL(SL,"tstrings",True)['at_del'] # u"$tstrings['at_del']" on line 228, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_del']")) # from line 228, col 30.
        write(u'''</button>
\t\t\t\t\t\t<button id="atbutton2">''')
        _v = VFFSL(SL,"tstrings",True)['at_reload'] # u"$tstrings['at_reload']" on line 229, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_reload']")) # from line 229, col 30.
        write(u'''</button>
\t\t\t\t\t\t<button id="atbutton3">''')
        _v = VFFSL(SL,"tstrings",True)['at_save'] # u"$tstrings['at_save']" on line 230, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_save']")) # from line 230, col 30.
        write(u'''</button>
\t\t\t\t\t\t<button id="atbutton4">''')
        _v = VFFSL(SL,"tstrings",True)['at_parse'] # u"$tstrings['at_parse']" on line 231, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_parse']")) # from line 231, col 30.
        write(u'''</button>
\t\t\t\t\t\t<button id="atbutton5">''')
        _v = VFFSL(SL,"tstrings",True)['at_simulate'] # u"$tstrings['at_simulate']" on line 232, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_simulate']")) # from line 232, col 30.
        write(u'''</button>
\t\t\t\t\t\t<button id="atbutton6">''')
        _v = VFFSL(SL,"tstrings",True)['at_timers'] # u"$tstrings['at_timers']" on line 233, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_timers']")) # from line 233, col 30.
        write(u'''</button>
\t\t\t\t\t\t<button id="atbutton7">''')
        _v = VFFSL(SL,"tstrings",True)['at_settings'] # u"$tstrings['at_settings']" on line 234, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['at_settings']")) # from line 234, col 30.
        write(u'''</button>
\t\t\t\t\t\t</div></div>
\t\t\t\t\t\t<div id="errorbox" class="timerlist_row" style="color: red;">
\t\t<div class="ui-state-error ui-corner-all" style="padding: 0 .7em;"> 
\t\t\t<p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span> 
\t\t\t<span id="error"></span>
\t\t\t<span id="success" style="color: green;"></span>
\t\t</div>
\t</div>
\t\t<span style="display: block;clear: both;"/>
\t\t</div>
\t\t</div>
\t</div>
\t</div>
\t</div>
</div>
<div id="simdlg" style="display:none;">
<div style="font-size:smaller;">
<table id="simt" border="0" class="ui-widget" style="margin:3px;width:100%;">
<thead class="ui-widget-header">
<tr><th>''')
        _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 254, col 9
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 254, col 9.
        write(u'''</th><th>''')
        _v = VFFSL(SL,"tstrings",True)['title'] # u"$tstrings['title']" on line 254, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['title']")) # from line 254, col 35.
        write(u'''</th><th>''')
        _v = VFFSL(SL,"tstrings",True)['channel'] # u"$tstrings['channel']" on line 254, col 62
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['channel']")) # from line 254, col 62.
        write(u'''</th><th>''')
        _v = VFFSL(SL,"tstrings",True)['start'] # u"$tstrings['start']" on line 254, col 91
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['start']")) # from line 254, col 91.
        write(u'''</th><th>''')
        _v = VFFSL(SL,"tstrings",True)['end'] # u"$tstrings['end']" on line 254, col 118
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['end']")) # from line 254, col 118.
        write(u'''</th></tr>
</thead>
<tbody id=\'simtb\' class="ui-widget-content">
</tbody>
</table>
</div>
</div>

<div id="timerdlg" style="display:none;">
<div id="timerdlgcont">
</div>
<div>

<div id="atsettingdlg" style="display:none;">
<div id="atsettingdlgcont">
<form>
<fieldset>
<label for="ats_autopoll">''')
        _v = VFFSL(SL,"tstrings",True)['ats_autopoll'] # u"$tstrings['ats_autopoll']" on line 271, col 27
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_autopoll']")) # from line 271, col 27.
        write(u''':</label>
<input type="checkbox" name="ats_autopoll" id="ats_autopoll" value="" class="checkbox ui-widget-content ui-corner-all">
<label for="ats_interval">''')
        _v = VFFSL(SL,"tstrings",True)['ats_interval'] # u"$tstrings['ats_interval']" on line 273, col 27
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_interval']")) # from line 273, col 27.
        write(u''':</label>
<input type="text" size="5" name="ats_interval" id="ats_interval" class="text ui-widget-content ui-corner-all">
<label for="ats_maxdaysinfuture">''')
        _v = VFFSL(SL,"tstrings",True)['ats_maxdaysinfuture'] # u"$tstrings['ats_maxdaysinfuture']" on line 275, col 34
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_maxdaysinfuture']")) # from line 275, col 34.
        write(u''':</label>
<input type="text" size="5" name="ats_maxdaysinfuture" id="ats_maxdaysinfuture" class="text ui-widget-content ui-corner-all">
<br><label for="ats_try_guessing">''')
        _v = VFFSL(SL,"tstrings",True)['ats_try_guessing'] # u"$tstrings['ats_try_guessing']" on line 277, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_try_guessing']")) # from line 277, col 35.
        write(u''':</label>
<input type="checkbox" name="ats_try_guessing" id="ats_try_guessing" value="" class="checkbox ui-widget-content ui-corner-all">
<label for="ats_fastscan">''')
        _v = VFFSL(SL,"tstrings",True)['ats_fastscan'] # u"$tstrings['ats_fastscan']" on line 279, col 27
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_fastscan']")) # from line 279, col 27.
        write(u''':</label>
<input type="checkbox" name="ats_fastscan" id="ats_fastscan" value="" class="checkbox ui-widget-content ui-corner-all">
<label for="ats_show_in_extensionsmenu">''')
        _v = VFFSL(SL,"tstrings",True)['ats_show_in_extensionsmenu'] # u"$tstrings['ats_show_in_extensionsmenu']" on line 281, col 41
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_show_in_extensionsmenu']")) # from line 281, col 41.
        write(u''':</label>
<input type="checkbox" name="ats_show_in_extensionsmenu" id="ats_show_in_extensionsmenu" value="" class="checkbox ui-widget-content ui-corner-all">
<br><label for="ats_disabled_on_conflict">''')
        _v = VFFSL(SL,"tstrings",True)['ats_disabled_on_conflict'] # u"$tstrings['ats_disabled_on_conflict']" on line 283, col 43
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_disabled_on_conflict']")) # from line 283, col 43.
        write(u''':</label>
<input type="checkbox" name="ats_disabled_on_conflict" id="ats_disabled_on_conflict" value="" class="checkbox ui-widget-content ui-corner-all">
<label for="ats_addsimilar_on_conflict">''')
        _v = VFFSL(SL,"tstrings",True)['ats_addsimilar_on_conflict'] # u"$tstrings['ats_addsimilar_on_conflict']" on line 285, col 41
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_addsimilar_on_conflict']")) # from line 285, col 41.
        write(u''':</label>
<input type="checkbox" name="ats_addsimilar_on_conflict" id="ats_addsimilar_on_conflict" value="" class="checkbox ui-widget-content ui-corner-all">
<br><label for="ats_notifconflict">''')
        _v = VFFSL(SL,"tstrings",True)['ats_notifconflict'] # u"$tstrings['ats_notifconflict']" on line 287, col 36
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_notifconflict']")) # from line 287, col 36.
        write(u''':</label>
<input type="checkbox" name="ats_notifconflict" id="ats_notifconflict" value="" class="checkbox ui-widget-content ui-corner-all">
<label for="ats_notifsimilar">''')
        _v = VFFSL(SL,"tstrings",True)['ats_notifsimilar'] # u"$tstrings['ats_notifsimilar']" on line 289, col 31
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_notifsimilar']")) # from line 289, col 31.
        write(u''':</label>
<input type="checkbox" name="ats_notifsimilar" id="ats_notifsimilar" value="" class="checkbox ui-widget-content ui-corner-all">
<br><label for="ats_add_autotimer_to_tags">''')
        _v = VFFSL(SL,"tstrings",True)['ats_add_autotimer_to_tags'] # u"$tstrings['ats_add_autotimer_to_tags']" on line 291, col 44
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_add_autotimer_to_tags']")) # from line 291, col 44.
        write(u''':</label>
<input type="checkbox" name="ats_add_autotimer_to_tags" id="ats_add_autotimer_to_tags" value="" class="checkbox ui-widget-content ui-corner-all">
<label for="ats_add_name_to_tags">''')
        _v = VFFSL(SL,"tstrings",True)['ats_add_name_to_tags'] # u"$tstrings['ats_add_name_to_tags']" on line 293, col 35
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_add_name_to_tags']")) # from line 293, col 35.
        write(u''':</label>
<input type="checkbox" name="ats_add_name_to_tags" id="ats_add_name_to_tags" value="" class="checkbox ui-widget-content ui-corner-all">

<br><label for="ats_refresh">''')
        _v = VFFSL(SL,"tstrings",True)['ats_refresh'] # u"$tstrings['ats_refresh']" on line 296, col 30
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh']")) # from line 296, col 30.
        write(u''':</label>
<select id="ats_refresh" name="ats_refresh" size="1">
\t\t\t\t<option value="none" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['ats_refresh_none'] # u"$tstrings['ats_refresh_none']" on line 298, col 46
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_none']")) # from line 298, col 46.
        write(u'''</option>
\t\t\t\t<option value="auto" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['ats_refresh_auto'] # u"$tstrings['ats_refresh_auto']" on line 299, col 46
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_auto']")) # from line 299, col 46.
        write(u'''</option>
\t\t\t\t<option value="all" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['ats_refresh_all'] # u"$tstrings['ats_refresh_all']" on line 300, col 45
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_refresh_all']")) # from line 300, col 45.
        write(u'''</option>
</select>

<label for="ats_editor">''')
        _v = VFFSL(SL,"tstrings",True)['ats_editor'] # u"$tstrings['ats_editor']" on line 303, col 25
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor']")) # from line 303, col 25.
        write(u'''</label>
<select id="ats_editor" name="ats_editor" size="1">
\t\t\t<option value="plain" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['ats_editor_plain'] # u"$tstrings['ats_editor_plain']" on line 305, col 46
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor_plain']")) # from line 305, col 46.
        write(u'''</option>
\t\t\t<option value="wizzard" selected="selected">''')
        _v = VFFSL(SL,"tstrings",True)['ats_editor_wizzard'] # u"$tstrings['ats_editor_wizzard']" on line 306, col 48
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['ats_editor_wizzard']")) # from line 306, col 48.
        write(u'''</option>
</select>

</fieldset>
</form>
</div>
<div>

<script type="text/javascript" src="/js/jquery-ui-timepicker-addon.min.js"></script>
<script type="text/javascript" src="/js/chosen.jquery.min.js"></script>
<script type="text/javascript" src="/js/at.js"></script>
<script type="text/javascript">
$(function() { InitPage();});
</script>
<link rel="stylesheet" type="text/css" href="/css/chosen.min.css" />
''')
        _filter = self._CHEETAH__currentFilter = _orig_filter_77311076
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_at= 'respond'

## END CLASS DEFINITION

if not hasattr(at, '_initCheetahAttributes'):
    templateAPIClass = getattr(at, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(at)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=at()).run()


