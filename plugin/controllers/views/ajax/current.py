#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from Plugins.Extensions.OpenWebif.local import tstrings

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1447321436.45128
__CHEETAH_genTimestamp__ = 'Thu Nov 12 18:43:56 2015'
__CHEETAH_src__ = '/home/knuth/openpli-oe-core/build/tmp/work/fusionhd-oe-linux/enigma2-plugin-extensions-openwebif/1+gitAUTOINC+5837c87afc-r0/git/plugin/controllers/views/ajax/current.tmpl'
__CHEETAH_srcLastModified__ = 'Thu Nov 12 18:43:41 2015'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class current(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(current, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write(u'''<!-- OSD -->
<style>
.ia,.ib,.id{float:left;position:relative;margin:0 0 3px 3px;height:26px;}
.ia{width:22px;background-image:url(/images/osd/icon_axd.png);}
.id{width:64px;background-image:url(/images/osd/icon_64x26.png);}
.ib{width:44px;background-image:url(/images/osd/icon_44x26.png);}
.iconadl{float:left;position:relative;top:6px;left:15px;height:26px;color:#FFF;font-size:14px;}
tr {background-color:#f0f7fc;}
.d14 { position:relative;height:14px;color:#FFF;font-size:14px;left:0px;top:0px;}
.d24 { position:relative;color:#FFF;font-size:14px;left:0px;top:10px;}
.d120 { float:left;display:block;width:120px;}
.dh24 { float:left;height:24px;}
.dh20 { float:left;height:20px;}
.dh14 { float:left;height:14px;}
</style>
<div style="width:680px;height:137px;background-image:url(images/osd/osd_back.png);">
\t<div style="float:left;width:120px;height:137px;">
\t\t<div class=\'d120\' style="height:37px;">
\t\t\t<div style="position:relative;top:10px;left:18px;color:#FFF;font-size:13px;font-weight:bold;">''')
        _v = VFFSL(SL,"info.date",True) # u'$info.date' on line 20, col 98
        if _v is not None: write(_filter(_v, rawExpr=u'$info.date')) # from line 20, col 98.
        write(u'''</div>
\t\t</div>
\t\t<div class=\'d120\' style="height:60px;">
\t\t\t<div style="position:relative;top:0px;left:15px;"><img border=\'0\' width="100px" height="60px" src=\'''')
        _v = VFFSL(SL,"getVar",False)("info.picon", "images/default_picon.png") # u'$getVar("info.picon", "images/default_picon.png")' on line 23, col 103
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.picon", "images/default_picon.png")')) # from line 23, col 103.
        write(u'''\' onclick="open_epg_dialog(\'''')
        _v = VFFSL(SL,"info.ref",True) # u'$info.ref' on line 23, col 180
        if _v is not None: write(_filter(_v, rawExpr=u'$info.ref')) # from line 23, col 180.
        write(u"""','""")
        _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 23, col 192
        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 23, col 192.
        write(u'''\');" href="#" title="''')
        _v = VFFSL(SL,"tstrings",True)['show_epg_for'] # u"$tstrings['show_epg_for']" on line 23, col 223
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['show_epg_for']")) # from line 23, col 223.
        write(u''' ''')
        _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 23, col 249
        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 23, col 249.
        write(u'''" border="0" alt=\'\' /></div>
 \t\t</div>
\t\t<div class=\'d120\' style="height:40px;">
\t\t\t<div style="position:relative;top:8px;left:0px;color:#FFF;text-align:center;font-size:13px;font-weight:bold;">''')
        _v = VFFSL(SL,"info.provider",True) # u'$info.provider' on line 26, col 114
        if _v is not None: write(_filter(_v, rawExpr=u'$info.provider')) # from line 26, col 114.
        write(u'''</div>
\t\t</div>
\t</div>
\t<div style="float:left;width:560px;height:137px;">
\t\t<div style="float:left;width:560px;height:25px;">
\t\t\t<div style="float:left;position:relative;top:5px;left:0px;width:480px;color:#FFF;text-align:center;font-size:18px;"><a style="color:#FFF" target="_blank" title="''')
        _v = VFFSL(SL,"tstrings",True)['stream'] # u"$tstrings['stream']" on line 31, col 165
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['stream']")) # from line 31, col 165.
        write(u''' ''')
        _v = VFFSL(SL,"getVar",False)('now.title', '') # u"$getVar('now.title', '')" on line 31, col 185
        if _v is not None: write(_filter(_v, rawExpr=u"$getVar('now.title', '')")) # from line 31, col 185.
        write(u''' from ''')
        _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 31, col 215
        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 31, col 215.
        write(u'''" href=\'web/stream.m3u?ref=''')
        _v = VFFSL(SL,"info.ref",True) # u'$info.ref' on line 31, col 252
        if _v is not None: write(_filter(_v, rawExpr=u'$info.ref')) # from line 31, col 252.
        write(u'''&name=''')
        _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 31, col 267
        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 31, col 267.
        write(u"""'>""")
        _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 31, col 279
        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 31, col 279.
        write(u'''</a></div>
\t\t</div>
\t\t<div style="float:left;width:560px;height:24px;">
\t\t\t<div class=\'dh24\' style="width:70px;">
\t\t\t\t<div class=\'d24\' style="left:15px;">''')
        _v = VFFSL(SL,"getVar",False)("now.begin", " ") # u'$getVar("now.begin", " ")' on line 35, col 41
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.begin", " ")')) # from line 35, col 41.
        write(u'''</div>
\t\t\t</div>
\t\t\t<div class=\'dh24\' style="width:360px;">
\t\t\t\t<div class=\'d24\'>''')
        _v = VFFSL(SL,"getVar",False)("now.title", " ") # u'$getVar("now.title", " ")' on line 38, col 22
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.title", " ")')) # from line 38, col 22.
        write(u'''</div>
\t\t\t</div>
\t\t\t<div class=\'dh24\' style="width:130px;">
\t\t\t\t<div class=\'d24\'>+''')
        _v = VFFSL(SL,"getVar",False)("now.tleft", " ") # u'$getVar("now.tleft", " ")' on line 41, col 23
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.tleft", " ")')) # from line 41, col 23.
        write(u''' min</div>
\t\t\t</div>
\t\t</div>
\t\t<div style="float:left;width:560px;height:16px;">
\t\t\t<div style="float:left;position:relative;top:2px;left:15px;width:400px;height:14px;background-image:url(images/osd/chan_bar_back.png);">
\t\t\t\t<div class=\'dh14\' style="width:400px;"><img border=\'0\' height=\'14px\' width=\'''')
        _v = VFFSL(SL,"getVar",False)("now.progress", "0") # u'${getVar("now.progress", "0")}' on line 46, col 81
        if _v is not None: write(_filter(_v, rawExpr=u'${getVar("now.progress", "0")}')) # from line 46, col 81.
        write(u'''px\' src=\'images/osd/chan_bar.png\' alt=\'\' /></div>
\t\t\t</div>
\t\t</div>
\t\t<div class=\'dh14\' style="width:560px;">
\t\t\t<div class=\'dh14\' style="width:70px;">
\t\t\t\t<div class=\'d14\' style="left:15px;">''')
        _v = VFFSL(SL,"getVar",False)("next.begin", " ") # u'$getVar("next.begin", " ")' on line 51, col 41
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.begin", " ")')) # from line 51, col 41.
        write(u'''</div>
\t\t\t</div>
\t\t\t<div class=\'dh14\'style="width:360px;">
\t\t\t\t<div class=\'d14\'>''')
        _v = VFFSL(SL,"getVar",False)("next.title", " ") # u'$getVar("next.title", " ")' on line 54, col 22
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.title", " ")')) # from line 54, col 22.
        write(u'''</div>
\t\t\t</div>
\t\t\t<div class=\'dh14\' style="width:130px;">
\t\t\t\t<div class=\'d14\'>&nbsp; ''')
        _v = VFFSL(SL,"getVar",False)("next.duration", " ") # u'$getVar("next.duration", " ")' on line 57, col 29
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("next.duration", " ")')) # from line 57, col 29.
        write(u''' min</div>
\t\t\t</div>
\t\t</div>
\t\t<div class=\'dh20\' style="width:560px;">
\t\t\t<div class=\'dh20\' style="width:100px;">
\t\t\t\t<div class=\'d14\' style="top:6px;left:15px;">''')
        _v = VFFSL(SL,"getVar",False)("info.tunertype", " ") # u'$getVar("info.tunertype", " ")' on line 62, col 49
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunertype", " ")')) # from line 62, col 49.
        write(u'''</div>
\t\t\t</div>
\t\t\t<div class=\'dh20\' style="width:80px;">
\t\t\t\t<div class=\'d14\' style="float:left;top:6px;">Snr: ''')
        _v = VFFSL(SL,"getVar",False)("info.snr", "0") # u'$getVar("info.snr", "0")' on line 65, col 55
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.snr", "0")')) # from line 65, col 55.
        write(u''' % </div>
\t\t\t</div>
\t\t\t<div class=\'dh20\' style="width:100px;">
\t\t\t\t<div class=\'dh14\' style="position:relative;top:8px;left:0px;width:100px;background-image:url(images/osd/snr_bar_back.png);">
\t\t\t\t\t<div class=\'dh14\' style="width:100px;"><img border=\'0\' height=\'14px\' width=\'''')
        _v = VFFSL(SL,"getVar",False)("info.snr", "0") # u'${getVar("info.snr", "0")}' on line 69, col 82
        if _v is not None: write(_filter(_v, rawExpr=u'${getVar("info.snr", "0")}')) # from line 69, col 82.
        write(u'''px\' src=\'images/osd/chan_bar.png\' alt=\'\' /></div>
\t\t\t\t</div>
\t\t\t</div>
\t\t\t<div class=\'dh20\' style="width:100px;">
\t\t\t\t<div class=\'d14\' style="float:left;top:6px;left:7px;"> Ber: ''')
        _v = VFFSL(SL,"getVar",False)("info.ber", "N/A") # u'$getVar("info.ber", "N/A")' on line 73, col 65
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.ber", "N/A")')) # from line 73, col 65.
        write(u''' </div>
\t\t\t</div>
\t\t\t<div class=\'dh20\' style="width:125px;">
\t\t\t\t<div class=\'d14\' style="top:6px;">''')
        _v = VFFSL(SL,"info.width",True) # u'$info.width' on line 76, col 39
        if _v is not None: write(_filter(_v, rawExpr=u'$info.width')) # from line 76, col 39.
        write(u''' x ''')
        _v = VFFSL(SL,"info.height",True) # u'$info.height' on line 76, col 53
        if _v is not None: write(_filter(_v, rawExpr=u'$info.height')) # from line 76, col 53.
        write(u'''</div>
\t\t\t</div>
\t\t</div>
\t\t<div style="float:left;width:560px;height:60px;">
\t\t\t<div style="float:left;width:110px;height:26px;">
\t\t\t\t<div class="iconadl">
''')
        ta = '26px'
        tb = '26px'
        tc = '26px'
        td = '26px'
        if VFFSL(SL,"info.tunernumber",True) == 0: # generated from line 86, col 1
            ta = '0px'
        elif VFFSL(SL,"info.tunernumber",True) == 1: # generated from line 88, col 1
            tb = '0px'
        elif VFFSL(SL,"info.tunernumber",True) == 2: # generated from line 90, col 1
            tc = '0px'
        elif VFFSL(SL,"info.tunernumber",True) == 3: # generated from line 92, col 1
            td = '0px'
        write(u'''\t\t\t\t\t<div class="ia" style="background-position: 0px -''')
        _v = VFFSL(SL,"ta",True) # u'$ta' on line 95, col 55
        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 95, col 55.
        write(u'''"></div>
\t\t\t\t\t<div class="ia" style="background-position: -22px -''')
        _v = VFFSL(SL,"tb",True) # u'$tb' on line 96, col 57
        if _v is not None: write(_filter(_v, rawExpr=u'$tb')) # from line 96, col 57.
        write(u'''"></div>
\t\t\t\t\t<div class="ia" style="background-position: -44px -''')
        _v = VFFSL(SL,"tc",True) # u'$tc' on line 97, col 57
        if _v is not None: write(_filter(_v, rawExpr=u'$tc')) # from line 97, col 57.
        write(u'''"></div>
\t\t\t\t\t<div class="ia" style="background-position: -66px -''')
        _v = VFFSL(SL,"td",True) # u'$td' on line 98, col 57
        if _v is not None: write(_filter(_v, rawExpr=u'$td')) # from line 98, col 57.
        write(u'''"></div>
\t\t\t\t</div>
\t\t\t</div>
\t\t\t<div style="float:left;width:400px;height:32px;">
\t\t\t\t<div class="iconadl" style="left:10px">
''')
        ta = '44px'
        if VFFSL(SL,"info.crypt",True) == 1: # generated from line 104, col 1
            ta = '0px'
        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
        _v = VFFSL(SL,"ta",True) # u'$ta' on line 107, col 51
        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 107, col 51.
        write(u''' 0px"></div>
''')
        ta = '64px'
        if VFFSL(SL,"info.dolby",True) == True: # generated from line 109, col 1
            ta = '0px'
        write(u'''\t\t\t\t\t<div class="id" style="background-position: -''')
        _v = VFFSL(SL,"ta",True) # u'$ta' on line 112, col 51
        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 112, col 51.
        write(u''' 0px"></div>
''')
        ta = '132px'
        if VFFSL(SL,"info.wide",True) == True: # generated from line 114, col 1
            ta = '88px'
        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
        _v = VFFSL(SL,"ta",True) # u'$ta' on line 117, col 51
        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 117, col 51.
        write(u''' 0px"></div>
''')
        ta = '220px'
        if VFFSL(SL,"info.width",True) > 1900: # generated from line 119, col 1
            ta = '176px'
        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
        _v = VFFSL(SL,"ta",True) # u'$ta' on line 122, col 51
        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 122, col 51.
        write(u''' 0px"></div>
''')
        ta = '220px'
        if VFFSL(SL,"info.txtpid",True) != "N/A": # generated from line 124, col 1
            ta = '176px'
        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
        _v = VFFSL(SL,"ta",True) # u'$ta' on line 127, col 51
        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 127, col 51.
        write(u''' -26px"></div>
''')
        ta = '132px'
        if VFFSL(SL,"info.subs",True) == True: # generated from line 129, col 1
            ta = '88px'
        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
        _v = VFFSL(SL,"ta",True) # u'$ta' on line 132, col 51
        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 132, col 51.
        write(u''' -26px"></div>
''')
        ta = '44px'
        if VFFSL(SL,"info.rec_state",True) == True: # generated from line 134, col 1
            ta = '0px'
        write(u'''\t\t\t\t\t<div class="ib" style="background-position: -''')
        _v = VFFSL(SL,"ta",True) # u'$ta' on line 137, col 51
        if _v is not None: write(_filter(_v, rawExpr=u'$ta')) # from line 137, col 51.
        write(u''' -26px"></div>
\t\t\t\t</div>
\t\t\t</div>
\t\t</div>
\t</div>
</div>

<!-- /END OSD -->

<br />
<table style="background: #1C478E;font-size:12px;" width="100%" border="0" cellspacing="1" cellpadding="5">
\t<tr style="background-color:initial;" >
\t\t<th colspan="3" class="infoHeader">''')
        _v = VFFSL(SL,"tstrings",True)['service'] # u"$tstrings['service']" on line 149, col 38
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['service']")) # from line 149, col 38.
        write(u'''</th>
\t</tr>
\t<tr>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['name'] # u"$tstrings['name']" on line 152, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['name']")) # from line 152, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.name",True) # u'$info.name' on line 152, col 26
        if _v is not None: write(_filter(_v, rawExpr=u'$info.name')) # from line 152, col 26.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['provider'] # u"$tstrings['provider']" on line 153, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['provider']")) # from line 153, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.provider",True) # u'$info.provider' on line 153, col 30
        if _v is not None: write(_filter(_v, rawExpr=u'$info.provider')) # from line 153, col 30.
        write(u'''</td>
\t\t<td id="ns" data-ns="''')
        _v = VFFSL(SL,"info.namespace",True) # u'$info.namespace' on line 154, col 24
        if _v is not None: write(_filter(_v, rawExpr=u'$info.namespace')) # from line 154, col 24.
        write(u'''">''')
        _v = VFFSL(SL,"tstrings",True)['namespace'] # u"$tstrings['namespace']" on line 154, col 41
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['namespace']")) # from line 154, col 41.
        write(u''': ''')
        _v = VFFSL(SL,"info.namespace",True) # u'$info.namespace' on line 154, col 65
        if _v is not None: write(_filter(_v, rawExpr=u'$info.namespace')) # from line 154, col 65.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['video_width'] # u"$tstrings['video_width']" on line 157, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_width']")) # from line 157, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.width",True) # u'$info.width' on line 157, col 33
        if _v is not None: write(_filter(_v, rawExpr=u'$info.width')) # from line 157, col 33.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['video_height'] # u"$tstrings['video_height']" on line 158, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_height']")) # from line 158, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.height",True) # u'$info.height' on line 158, col 34
        if _v is not None: write(_filter(_v, rawExpr=u'$info.height')) # from line 158, col 34.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['video_wide'] # u"$tstrings['video_wide']" on line 159, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['video_wide']")) # from line 159, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.wide",True) # u'$info.wide' on line 159, col 32
        if _v is not None: write(_filter(_v, rawExpr=u'$info.wide')) # from line 159, col 32.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['encrypted'] # u"$tstrings['encrypted']" on line 162, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['encrypted']")) # from line 162, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.crypt",True) # u'$info.crypt' on line 162, col 31
        if _v is not None: write(_filter(_v, rawExpr=u'$info.crypt')) # from line 162, col 31.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['dolby'] # u"$tstrings['dolby']" on line 163, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['dolby']")) # from line 163, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.dolby",True) # u'$info.dolby' on line 163, col 27
        if _v is not None: write(_filter(_v, rawExpr=u'$info.dolby')) # from line 163, col 27.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['subservices'] # u"$tstrings['subservices']" on line 164, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['subservices']")) # from line 164, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.subs",True) # u'$info.subs' on line 164, col 33
        if _v is not None: write(_filter(_v, rawExpr=u'$info.subs')) # from line 164, col 33.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['teletext'] # u"$tstrings['teletext']" on line 167, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['teletext']")) # from line 167, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.txtpid",True) # u'$info.txtpid' on line 167, col 30
        if _v is not None: write(_filter(_v, rawExpr=u'$info.txtpid')) # from line 167, col 30.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['rec_status'] # u"$tstrings['rec_status']" on line 168, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['rec_status']")) # from line 168, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"info.rec_state",True) # u'$info.rec_state' on line 168, col 32
        if _v is not None: write(_filter(_v, rawExpr=u'$info.rec_state')) # from line 168, col 32.
        write(u'''</td>
\t\t<td id="pmtpid" data-pmtpid="''')
        _v = VFFSL(SL,"info.pmtpid",True) # u'$info.pmtpid' on line 169, col 32
        if _v is not None: write(_filter(_v, rawExpr=u'$info.pmtpid')) # from line 169, col 32.
        write(u'''">Pmtpid: ''')
        _v = VFFSL(SL,"info.pmtpid",True) # u'$info.pmtpid' on line 169, col 54
        if _v is not None: write(_filter(_v, rawExpr=u'$info.pmtpid')) # from line 169, col 54.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td id="apid" data-apid="''')
        _v = VFFSL(SL,"info.apid",True) # u'$info.apid' on line 172, col 28
        if _v is not None: write(_filter(_v, rawExpr=u'$info.apid')) # from line 172, col 28.
        write(u'''">Apid: ''')
        _v = VFFSL(SL,"info.apid",True) # u'$info.apid' on line 172, col 46
        if _v is not None: write(_filter(_v, rawExpr=u'$info.apid')) # from line 172, col 46.
        write(u'''</td>
\t\t<td id="vpid" data-vpid="''')
        _v = VFFSL(SL,"info.vpid",True) # u'$info.vpid' on line 173, col 28
        if _v is not None: write(_filter(_v, rawExpr=u'$info.vpid')) # from line 173, col 28.
        write(u'''">Vpid: ''')
        _v = VFFSL(SL,"info.vpid",True) # u'$info.vpid' on line 173, col 46
        if _v is not None: write(_filter(_v, rawExpr=u'$info.vpid')) # from line 173, col 46.
        write(u'''</td>
\t\t<td id="pcrpid" data-pcrpid="''')
        _v = VFFSL(SL,"info.pcrpid",True) # u'$info.pcrpid' on line 174, col 32
        if _v is not None: write(_filter(_v, rawExpr=u'$info.pcrpid')) # from line 174, col 32.
        write(u'''">Pcrpid: ''')
        _v = VFFSL(SL,"info.pcrpid",True) # u'$info.pcrpid' on line 174, col 54
        if _v is not None: write(_filter(_v, rawExpr=u'$info.pcrpid')) # from line 174, col 54.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td id="tsid" data-tsid="''')
        _v = VFFSL(SL,"info.tsid",True) # u'$info.tsid' on line 177, col 28
        if _v is not None: write(_filter(_v, rawExpr=u'$info.tsid')) # from line 177, col 28.
        write(u'''">Tsid: ''')
        _v = VFFSL(SL,"info.tsid",True) # u'$info.tsid' on line 177, col 46
        if _v is not None: write(_filter(_v, rawExpr=u'$info.tsid')) # from line 177, col 46.
        write(u''' </td>
\t\t<td id="onid" data-onid="''')
        _v = VFFSL(SL,"info.onid",True) # u'$info.onid' on line 178, col 28
        if _v is not None: write(_filter(_v, rawExpr=u'$info.onid')) # from line 178, col 28.
        write(u'''">Onid: ''')
        _v = VFFSL(SL,"info.onid",True) # u'$info.onid' on line 178, col 46
        if _v is not None: write(_filter(_v, rawExpr=u'$info.onid')) # from line 178, col 46.
        write(u'''</td>
\t\t<td id="sid" data-sid="''')
        _v = VFFSL(SL,"info.sid",True) # u'$info.sid' on line 179, col 26
        if _v is not None: write(_filter(_v, rawExpr=u'$info.sid')) # from line 179, col 26.
        write(u'''">Sid: ''')
        _v = VFFSL(SL,"info.sid",True) # u'$info.sid' on line 179, col 42
        if _v is not None: write(_filter(_v, rawExpr=u'$info.sid')) # from line 179, col 42.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td>Sref: ''')
        _v = VFFSL(SL,"info.sref",True) # u'$info.sref' on line 182, col 13
        if _v is not None: write(_filter(_v, rawExpr=u'$info.sref')) # from line 182, col 13.
        write(u'''</td>
\t\t<td>&nbsp;</td>
\t\t<td>&nbsp;</td>
\t</tr>
\t<tr style="background-color:initial;" >
\t\t<th colspan="3" class="infoHeader">''')
        _v = VFFSL(SL,"tstrings",True)['tuner_signal'] # u"$tstrings['tuner_signal']" on line 187, col 38
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal']")) # from line 187, col 38.
        write(u'''</th>
\t</tr>
\t<tr>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['tuner_type'] # u"$tstrings['tuner_type']" on line 190, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_type']")) # from line 190, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"getVar",False)("info.tunertype", "N/A") # u'$getVar("info.tunertype", "N/A")' on line 190, col 32
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunertype", "N/A")')) # from line 190, col 32.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['tuner_number'] # u"$tstrings['tuner_number']" on line 191, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_number']")) # from line 191, col 7.
        write(u''':  ''')
        _v = VFFSL(SL,"getVar",False)("info.tunernumber", "N/A") # u'$getVar("info.tunernumber", "N/A")' on line 191, col 35
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.tunernumber", "N/A")')) # from line 191, col 35.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['tuner_signal_snr'] # u"$tstrings['tuner_signal_snr']" on line 192, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_snr']")) # from line 192, col 7.
        write(u''':  ''')
        _v = VFFSL(SL,"getVar",False)("info.snr", "N/A") # u'$getVar("info.snr", "N/A")' on line 192, col 39
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.snr", "N/A")')) # from line 192, col 39.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['tuner_signal_snr_db'] # u"$tstrings['tuner_signal_snr_db']" on line 195, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_snr_db']")) # from line 195, col 7.
        write(u''':  ''')
        _v = VFFSL(SL,"getVar",False)("info.snr_db", "N/A") # u'$getVar("info.snr_db", "N/A")' on line 195, col 42
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.snr_db", "N/A")')) # from line 195, col 42.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['tuner_signal_agc'] # u"$tstrings['tuner_signal_agc']" on line 196, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_signal_agc']")) # from line 196, col 7.
        write(u''':  ''')
        _v = VFFSL(SL,"getVar",False)("info.agc", "N/A") # u'$getVar("info.agc", "N/A")' on line 196, col 39
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.agc", "N/A")')) # from line 196, col 39.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['tuner_ber'] # u"$tstrings['tuner_ber']" on line 197, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['tuner_ber']")) # from line 197, col 7.
        write(u''':  ''')
        _v = VFFSL(SL,"getVar",False)("info.ber", "N/A") # u'$getVar("info.ber", "N/A")' on line 197, col 32
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("info.ber", "N/A")')) # from line 197, col 32.
        write(u'''</td>
\t</tr>
\t<tr style="background-color:initial;" >
\t\t<th colspan="3" class="infoHeader">''')
        _v = VFFSL(SL,"tstrings",True)['current_event'] # u"$tstrings['current_event']" on line 200, col 38
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['current_event']")) # from line 200, col 38.
        write(u'''</th>
\t</tr>
\t<tr>
\t\t<td colspan="3">''')
        _v = VFFSL(SL,"tstrings",True)['title'] # u"$tstrings['title']" on line 203, col 19
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['title']")) # from line 203, col 19.
        write(u''': ''')
        _v = VFFSL(SL,"getVar",False)("now.title", " ") # u'$getVar("now.title", " ")' on line 203, col 39
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.title", " ")')) # from line 203, col 39.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['begin'] # u"$tstrings['begin']" on line 206, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['begin']")) # from line 206, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"getVar",False)("now.begin", " ") # u'$getVar("now.begin", " ")' on line 206, col 27
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.begin", " ")')) # from line 206, col 27.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['end'] # u"$tstrings['end']" on line 207, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['end']")) # from line 207, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"getVar",False)("now.end", " ") # u'$getVar("now.end", " ")' on line 207, col 25
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.end", " ")')) # from line 207, col 25.
        write(u'''</td>
\t\t<td>''')
        _v = VFFSL(SL,"tstrings",True)['duration'] # u"$tstrings['duration']" on line 208, col 7
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['duration']")) # from line 208, col 7.
        write(u''': ''')
        _v = VFFSL(SL,"getVar",False)("now.duration", " ") # u'$getVar("now.duration", " ")' on line 208, col 30
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.duration", " ")')) # from line 208, col 30.
        write(u'''</td>
\t</tr>
\t<tr>
\t\t<td colspan="3">''')
        _v = VFFSL(SL,"tstrings",True)['description'] # u"$tstrings['description']" on line 211, col 19
        if _v is not None: write(_filter(_v, rawExpr=u"$tstrings['description']")) # from line 211, col 19.
        write(u''':  ''')
        _v = VFFSL(SL,"getVar",False)("now.shortdesc", " ") # u'$getVar("now.shortdesc", " ")' on line 211, col 46
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.shortdesc", " ")')) # from line 211, col 46.
        write(u'''
\t\t<br>''')
        _v = VFFSL(SL,"getVar",False)("now.longdesc", " ") # u'$getVar("now.longdesc", " ")' on line 212, col 7
        if _v is not None: write(_filter(_v, rawExpr=u'$getVar("now.longdesc", " ")')) # from line 212, col 7.
        write(u'''
\t\t</td>
\t</tr>
</table>
<script type="text/javascript">
function PrintDH(i)
{
var result = "0000";
if (i >= 0 && i <= 15) {result="000"+i.toString(16);}
else if (i >= 16 && i <= 255) {result="00"+i.toString(16);}
else if (i >= 256 && i <= 4095) {result="0"+i.toString(16);}
else if (i >= 4096 && i <= 65535) {result=i.toString(16);}
else {result=i.toString(16);}
return " (" + result + ")";
}
var v = parseInt($("#pmtpid").data("pmtpid"));
$("#pmtpid").html($("#pmtpid").html() + PrintDH(v));
v = parseInt($("#apid").data("apid"));
$("#apid").html($("#apid").html() + PrintDH(v));
v = parseInt($("#vpid").data("vpid"));
$("#vpid").html($("#vpid").html() + PrintDH(v));
v = parseInt($("#pcrpid").data("pcrpid"));
$("#pcrpid").html($("#pcrpid").html() + PrintDH(v));
v = parseInt($("#tsid").data("tsid"));
$("#tsid").html($("#tsid").html() + PrintDH(v));
v = parseInt($("#onid").data("onid"));
$("#onid").html($("#onid").html() + PrintDH(v));
v = parseInt($("#sid").data("sid"));
$("#sid").html($("#sid").html() + PrintDH(v));
v = parseInt($("#ns").data("ns"));
$("#ns").html($("#ns").html() + PrintDH(v));

</script>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_current= 'respond'

## END CLASS DEFINITION

if not hasattr(current, '_initCheetahAttributes'):
    templateAPIClass = getattr(current, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(current)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=current()).run()


